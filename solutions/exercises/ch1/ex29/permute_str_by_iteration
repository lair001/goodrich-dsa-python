#!/usr/bin/env python3

# ch1/ex29/2

from sys import argv
from math import factorial


def permute_str(string):
    if len(string) == 0:
        return []
    elif len(string) == 1:
        return [string]
    else:
        original_char_array = list(string)
        char_array = original_char_array
        permutations = []
        expected_size = factorial(len(string))

        i = 0
        while len(permutations) < expected_size:
            if i & 1 == 0:
                for i in range(0, len(char_array) - 1):
                    char_array[i], char_array[i + 1] = char_array[i + 1], char_array[i]
                    permutations.append("".join(char_array))
                char_array[0], char_array[1] = char_array[1], char_array[0]
                permutations.append("".join(char_array))
            else:
                for i in range(0, len(char_array) - 1):
                    char_array[-1 - i], char_array[-2 - i] = char_array[-2 - i], char_array[-1 - i]
                    permutations.append("".join(char_array))
                char_array[-1], char_array[-2] = char_array[-2], char_array[-1]
                permutations.append("".join(char_array))

            i += 1

        return permutations


if __name__ == "__main__":
    string = "catdog" if len(argv) < 2 else argv[1]
    permutations = permute_str(string)
    for permutation in permutations:
        print(permutation)
    print("\nNumber of permutations: %i" % len(permutations))

#!/usr/bin/env python3

# ch5/ex9

from sys import argv
from solutions.vendor.ch05.caesar import CaesarCipher as Ch5CaesarCipher


class HebrewCipher(Ch5CaesarCipher):

    def __init__(self, shift):
        """Construct Caesar cipher using given integer shift for rotation."""
        self._forward = ''.join([chr((k + shift) % 27 + ord('א')) for k in range(27)])
        self._backward = ''.join([chr((k - shift) % 27 + ord('א')) for k in range(27)])

    def _transform(self, original, code):
        """Utility to perform transformation based on given code string."""
        msg = list(original)
        for k in range(len(msg)):
            if ord('א') <= ord(msg[k]) <= ord('ת'):
                j = ord(msg[k]) - ord('א')  # index from 0 to 26
                msg[k] = code[j]  # replace this character
        return ''.join(msg)


if __name__ == "__main__":
    shift = 3 if len(argv) < 2 else int(argv[1])
    original_msg = "שלום עולם!" if len(argv) < 3 else argv[2]
    cc = HebrewCipher(shift)
    print("Original Message: {}".format(original_msg[::-1]))
    encrypted_msg = cc.encrypt(original_msg)
    print("Encrypted Message: {}".format(encrypted_msg[::-1]))
    print("Decrypted Message: {}".format(cc.decrypt(encrypted_msg[::-1])))

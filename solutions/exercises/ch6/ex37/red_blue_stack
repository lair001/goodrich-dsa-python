#!/usr/bin/env python3

# ch6/ex37
from sys import argv

from solutions.exercises.ch6.ex37.red_blue_stack import RedBlueStack

_DIVIDER = "-" * 52


def _main():
    n = int(argv[1]) if len(argv) > 1 else 10
    red_blue_stack = RedBlueStack()
    print(_DIVIDER)
    print("red_stack: {}".format(red_blue_stack.red_str()))
    print("blue_stack: {}".format(red_blue_stack.blue_str()))
    for i in range(0, n + n, 2):
        print(_DIVIDER)
        if not red_blue_stack.is_red_empty():
            print("red_top: {}".format(red_blue_stack.red_top()))
        print("red_push: {}".format(i))
        red_blue_stack.red_push(i)
        print("red_stack: {}".format(red_blue_stack.red_str()))
        if not red_blue_stack.is_blue_empty():
            print("blue_top: {}".format(red_blue_stack.blue_top()))
        print("blue_push: {}".format(i + 1))
        red_blue_stack.blue_push(i + 1)
        print("blue_stack: {}".format(red_blue_stack.blue_str()))

    while not red_blue_stack.is_red_empty() and not red_blue_stack.is_blue_empty():
        print(_DIVIDER)
        print("red_top: {}".format(red_blue_stack.red_top()))
        print("red_pop: {}".format(red_blue_stack.red_pop()))
        print("red_stack: {}".format(red_blue_stack.red_str()))
        print("blue_top: {}".format(red_blue_stack.blue_top()))
        print("blue_pop: {}".format(red_blue_stack.blue_pop()))
        print("blue_stack: {}".format(red_blue_stack.blue_str()))

    print(_DIVIDER)


if __name__ == "__main__":
    _main()
